mutate(category = case_when(
str_detect(variable,  "usa surgeri tick bodi peni year ben patient state —") ~ "medical",
str_detect(variable, "mother adopt time children told parent year peopl famili child") ~ "family",
str_detect(variable, "time york compani copyright classif language english right photograph reserv public") ~ "meta_data",
str_detect(variable, "’ “ — word trump ” length  peopl thing book") ~ "politics",
str_detect(variable, "abort women contracept health pregnanc reproduct control court birth law") ~ "gender_equality",
str_detect(variable, "state end year abbott document govern texa citi plan million") ~ "law",
))
#add categories
vizDataFrame <- vizDataFrame %>%
mutate(category = case_when(
str_detect(variable,  "usa surgeri tick bodi peni year ben patient state —") ~ "medical",
str_detect(variable, "mother adopt time children told parent year peopl famili child") ~ "family",
str_detect(variable, "time york compani copyright classif language english right photograph reserv public") ~ "meta_data",
str_detect(variable, "’ “ — word trump ” length  peopl thing book") ~ "politics",
str_detect(variable, "abort women contracept health pregnanc reproduct control court birth law") ~ "gender_equality",
str_detect(variable, "state end year abbott document govern texa citi plan million") ~ "law",
))
write.csv(vizDataFrame, file="vizDataFrame.csv")
vizDataFrame <- vizDataFrame %>%
mutate(variable = str_to_lower(variable)) %>%
mutate(category = case_when(
str_detect(variable, "usa|surgeri|tick|bodi|peni|patient|state") ~ "medical",
str_detect(variable, "mother|adopt|children|parent|famili|child") ~ "family",
str_detect(variable, "time|york|compani|copyright|english|photo") ~ "meta_data",
str_detect(variable, "word|trump|book|peopl|thing") ~ "politics",
str_detect(variable, "abort|women|contracept|pregnanc|birth|law") ~ "gender_equality",
str_detect(variable, "state|govern|texa|plan|document") ~ "law"
))
theta2 <- as.data.frame(theta)
medical <- theta2 %>%
#renaming for a general topic
rename(medical = '4') %>%
top_n(20, medical ) %>%
arrange(desc(medical )) %>%
select(medical )
# Apply rownames_to_column
medical  <- tibble::rownames_to_column(medical , "story_id")
medical $story_id <- gsub("X", "", medical $story_id)
head(medical$story_id, 20)
#Checks out
theta2 <- as.data.frame(theta)
gender_equality <- theta2 %>%
#renaming for a general topic
rename(gender_equality = '5') %>%
top_n(20, gender_equality ) %>%
arrange(desc(gender_equality )) %>%
select(gender_equality )
# Apply rownames_to_column
gender_equality  <- tibble::rownames_to_column(gender_equality, "story_id")
gender_equality$story_id <- gsub("X", "", gender_equality$story_id)
head(gender_equality$story_id, 20)
#Checks out
theta2 <- as.data.frame(theta)
law <- theta2 %>%
#renaming for a general topic
rename(law = '3') %>%
top_n(20, law ) %>%
arrange(desc(law)) %>%
select(law )
# Apply rownames_to_column
law  <- tibble::rownames_to_column(law , "story_id")
law $story_id <- gsub("X", "", law$story_id)
head(law$story_id, 20)
#Checks out
#main theme is negros are lynching victims
# plot topic proportions per decade as bar plot
ggplot(vizDataFrame, aes(x=year, y=value, fill=category)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(20), "FF"), name = "year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_manual(values=c("red",
"yellow",
"darkblue",
"blue",
"pink",
"orange")) +
labs(title = "Common Narratives in Lynching News Coverage",
subtitle = "Six probable topics in white press sample. n=9,590",
caption = "Aggregate mean topic proportions per decade. Graphic by (redated - peer review) & (redated - peer review), 10-19-2024")
# ggsave(here::here("../lynching_press/output_images_tables/Article_Images/Figure_15_white_topics_oct_19_2024.png"),device = "png",width=9,height=6, dpi=800)
# plot topic proportions per decade as bar plot
ggplot(vizDataFrame, aes(x=year, y=value, fill=category)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(20), "FF"), name = "year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_manual(values=c("red",
"yellow",
"darkblue",
"blue",
"pink",
"orange")) +
labs(title = "Common Narratives in Vasectomy News Coverage 2022-2025",
subtitle = "Six probable topics in U.S. news sample. n=137",
caption = "Aggregate mean topic proportions per year. Graphic by Catherine Zhang, 04-04-2025")
ggsave(here::here("../Figure_US_topics_04_04_2025.png"),device = "png",width=9,height=6, dpi=800)
# plot topic proportions per decade as bar plot
ggplot(vizDataFrame, aes(x=year, y=value, fill=category)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(20), "FF"), name = "year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_manual(values=c("red",
"yellow",
"darkblue",
"blue",
"pink",
"orange")) +
labs(title = "Common Narratives in Vasectomy News Coverage 2022-2025",
subtitle = "Six probable topics in U.S. news sample. n=137",
caption = "Aggregate mean topic proportions per year. Graphic by Catherine Zhang, 04-04-2025")
ggsave(here::here("./Figure_US_topics_04_04_2025.png"),device = "png",width=9,height=6, dpi=800)
# set options
options(stringsAsFactors = F)         # no automatic data transformation
options("scipen" = 100, "digits" = 4) # suppress math annotation
# load packages
here::here()
library(tidyverse)
library(tidytext)
library(rio)
library(readtext)
#topic modeling
library(quanteda)
library(tm)
library(topicmodels)
library(lda)
library(ldatuning)
# from tutorial packages
library(DT)
library(knitr)
library(kableExtra)
library(reshape2)
library(ggplot2)
library(wordcloud)
library(pals)
library(SnowballC)
library(flextable)
#import text files that were compiled into a df
vas <- read_csv("./articles137_df.csv")
#add a year column
vas <- vas %>%
mutate(year = year(published_date))
textdata <- vas %>%
select(filename, sentence, year) %>%
as.data.frame() %>%
rename(doc_id = filename, text= sentence)
# load stopwords
english_stopwords <- readLines("https://slcladal.github.io/resources/stopwords_en.txt", encoding = "UTF-8")
# create corpus object
corpus <- Corpus(DataframeSource(textdata))
# Preprocessing chain
processedCorpus <- tm_map(corpus, content_transformer(tolower))
processedCorpus <- tm_map(processedCorpus, removeWords, english_stopwords)
processedCorpus <- tm_map(processedCorpus, removePunctuation, preserve_intra_word_dashes = TRUE)
processedCorpus <- tm_map(processedCorpus, removeNumbers)
processedCorpus <- tm_map(processedCorpus, stemDocument, language = "en")
processedCorpus <- tm_map(processedCorpus, stripWhitespace)
# append decade information for aggregation
textdata$decade <- paste0(substr(textdata$year, 0, 3), "0")
# number of topics
# K <- 20
K <- 6
# set random number generator seed
set.seed(9161)
#Latent Dirichlet Allocation, LDA
topicModel2 <- LDA(DTM, K, method="Gibbs", control=list(iter = 500, verbose = 25, alpha = 0.2))
#DTM: rows correspond to the documents in the corpus. Columns correspond to the terms in the documents. Cells correspond to the weights of the terms. (Girder)
# compute document term matrix with terms >= minimumFrequency
minimumFrequency <- 5
DTM <- DocumentTermMatrix(processedCorpus, control = list(bounds = list(global = c(minimumFrequency, Inf))))
# have a look at the number of documents and terms in the matrix
dim(DTM)
# due to vocabulary pruning, we have empty rows in our DTM
# LDA does not like this. So we remove those docs from the
# DTM and the metadata
sel_idx <- slam::row_sums(DTM) > 0
DTM <- DTM[sel_idx, ]
textdata <- textdata[sel_idx, ]
#5 term minimum[1] 1387 3019
#5 term minimum[1] 308597 10339
# number of topics
# K <- 20
K <- 6
# set random number generator seed
set.seed(9161)
#Latent Dirichlet Allocation, LDA
topicModel2 <- LDA(DTM, K, method="Gibbs", control=list(iter = 500, verbose = 25, alpha = 0.2))
tmResult <- posterior(topicModel2)
theta <- tmResult$topics
beta <- tmResult$terms
topicNames <- apply(terms(topicModel2, 10), 2, paste, collapse = " ")  # reset topicnames
# Step 1: Check dimensions
n_theta <- nrow(theta)
n_textdata <- length(textdata$year)
cat("Number of rows in theta: ", n_theta, "\n")
cat("Number of documents in textdata: ", n_textdata, "\n")
# Check if textdata contains all the documents in theta
common_ids <- intersect(rownames(theta), textdata$doc_id) # Assuming textdata has a 'doc_id' column
# Filter textdata to include only the documents present in theta
textdata_filtered <- textdata[textdata$doc_id %in% common_ids, ]
# Check dimensions after filtering
n_textdata_filtered <- nrow(textdata_filtered)
cat("Number of documents in filtered textdata: ", n_textdata_filtered, "\n")
# Ensure the lengths match now
if (n_theta != n_textdata_filtered) {
stop("The number of rows in 'theta' still does not match the length of 'textdata_filtered$year'.")
}
# Align rownames of theta with filtered textdata
theta_aligned <- theta[rownames(theta) %in% textdata_filtered$doc_id, ]
# Optional: Verify the order of documents
if (!all(rownames(theta_aligned) == textdata_filtered$doc_id)) {
# If the order doesn't match, reorder one to match the other
textdata_filtered <- textdata_filtered[match(rownames(theta_aligned), textdata_filtered$doc_id), ]
}
# Ensure they are now aligned and can be combined
if (!all(rownames(theta_aligned) == textdata_filtered$doc_id)) {
stop("The document IDs still do not match. Please check the data alignment.")
}
# Step 2: Combine data
topic_data <- data.frame(theta_aligned, year = textdata_filtered$year)
# Step 3: Aggregate data
topic_proportion_per_year <- aggregate(. ~ year, data = topic_data, FUN = mean)
# get mean topic proportions per decade
# topic_proportion_per_decade <- aggregate(theta, by = list(decade = textdata$decade), mean)
# set topic names to aggregated columns
colnames(topic_proportion_per_year)[2:(K+1)] <- topicNames
# reshape data frame
vizDataFrame <- melt(topic_proportion_per_year, id.vars = "year")
#enframe(): Converts a named list into a dataframe.
topics <- enframe(topicNames, name = "number", value = "text") %>%
unnest(cols = c(text))
topics
#Topic 1 -usa surgeri tick bodi peni year ben patient state —
theta2 <- as.data.frame(theta)
topic1 <- theta2 %>%
rownames_to_column(var = "file") |> # putting the rownames into a new column called file
mutate(file = str_remove(file, "^X"),  # Remove leading 'X'
line = str_extract(file, "(?<=\\.txt)\\.\\d+")) |>   # Extract number after .txt
mutate(file = str_remove(file, "\\.\\d+$")) |>
rename(topic1 = '1') |> # looking at first topic: usa surgeri tick bodi peni year ben patient state —
top_n(20, topic1) |>
arrange(desc(topic1)) |>
select(file, line, topic1)
#add categories
vizDataFrame <- vizDataFrame %>%
mutate(variable = str_to_lower(variable)) %>%
mutate(category = case_when(
str_detect(variable, "usa|surgeri|tick|bodi|peni|patient|state") ~ "medical",
str_detect(variable, "mother|adopt|children|parent|famili|child") ~ "family",
str_detect(variable, "time|york|compani|copyright|english|photo") ~ "meta_data",
str_detect(variable, "word|trump|book|peopl|thing") ~ "politics",
str_detect(variable, "abort|women|contracept|pregnanc|birth|law") ~ "gender_equality",
str_detect(variable, "state|govern|texa|plan|document") ~ "law"
))
theta2 <- as.data.frame(theta)
medical <- theta2 %>%
#renaming for a general topic
rename(medical = '4') %>%
top_n(20, medical ) %>%
arrange(desc(medical )) %>%
select(medical )
# Apply rownames_to_column
medical  <- tibble::rownames_to_column(medical , "story_id")
medical $story_id <- gsub("X", "", medical $story_id)
head(medical$story_id, 20)
#Checks out
theta2 <- as.data.frame(theta)
gender_equality <- theta2 %>%
#renaming for a general topic
rename(gender_equality = '5') %>%
top_n(20, gender_equality ) %>%
arrange(desc(gender_equality )) %>%
select(gender_equality )
# Apply rownames_to_column
gender_equality  <- tibble::rownames_to_column(gender_equality, "story_id")
gender_equality$story_id <- gsub("X", "", gender_equality$story_id)
head(gender_equality$story_id, 20)
#Checks out
theta2 <- as.data.frame(theta)
law <- theta2 %>%
#renaming for a general topic
rename(law = '3') %>%
top_n(20, law ) %>%
arrange(desc(law)) %>%
select(law )
# Apply rownames_to_column
law  <- tibble::rownames_to_column(law , "story_id")
law $story_id <- gsub("X", "", law$story_id)
head(law$story_id, 20)
#Checks out
#main theme is negros are lynching victims
# plot topic proportions per decade as bar plot
ggplot(vizDataFrame, aes(x=year, y=value, fill=category)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(20), "FF"), name = "year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_manual(values=c("red",
"yellow",
"darkblue",
"blue",
"pink",
"orange")) +
labs(title = "Common Narratives in Vasectomy News Coverage 2022-2025",
subtitle = "Six probable topics in U.S. news sample. n=137",
caption = "Aggregate mean topic proportions per year. Graphic by Catherine Zhang, 04-04-2025")
#ggsave(here::here("./Figure_US_topics_04_04_2025.png"),device = "png",width=9,height=6, dpi=800)
#add categories
vizDataFrame <- vizDataFrame %>%
mutate(variable = str_to_lower(variable)) %>%
mutate(category = case_when(
str_detect(variable, "usa|surgeri|tick|bodi|peni|patient|state") ~ "politics",
str_detect(variable, "mother|adopt|children|parent|famili|child") ~ "family",
str_detect(variable, "time|york|compani|copyright|english|photo") ~ "meta_data",
str_detect(variable, "word|trump|book|peopl|thing") ~ "trump",
str_detect(variable, "abort|women|contracept|pregnanc|birth|law") ~ "law",
str_detect(variable, "state|govern|texa|plan|document") ~ "gender_equality"
))
theta2 <- as.data.frame(theta)
trump <- theta2 %>%
#renaming for a general topic
rename(trump = '4') %>%
top_n(20, trump ) %>%
arrange(desc(trump )) %>%
select(trump )
# Apply rownames_to_column
trump  <- tibble::rownames_to_column(trump , "story_id")
trump $story_id <- gsub("X", "", trump $story_id)
head(trump$story_id, 20)
#Checks out
theta2 <- as.data.frame(theta)
gender_equality <- theta2 %>%
#renaming for a general topic
rename(gender_equality = '5') %>%
top_n(20, gender_equality ) %>%
arrange(desc(gender_equality )) %>%
select(gender_equality )
# Apply rownames_to_column
gender_equality  <- tibble::rownames_to_column(gender_equality, "story_id")
gender_equality$story_id <- gsub("X", "", gender_equality$story_id)
head(gender_equality$story_id, 20)
#Checks out
theta2 <- as.data.frame(theta)
law <- theta2 %>%
#renaming for a general topic
rename(law = '3') %>%
top_n(20, law ) %>%
arrange(desc(law)) %>%
select(law )
# Apply rownames_to_column
law  <- tibble::rownames_to_column(law , "story_id")
law $story_id <- gsub("X", "", law$story_id)
head(law$story_id, 20)
#Checks out
#main theme is negros are lynching victims
View(law)
#Topic 1 -usa surgeri tick bodi peni year ben patient state —
theta2 <- as.data.frame(theta)
topic1 <- theta2 %>%
rownames_to_column(var = "file") |> # putting the rownames into a new column called file
mutate(file = str_remove(file, "^X"),  # Remove leading 'X'
line = str_extract(file, "(?<=\\.txt)\\.\\d+")) |>   # Extract number after .txt
mutate(file = str_remove(file, "\\.\\d+$")) |>
rename(topic1 = '1') |> # looking at first topic: usa surgeri tick bodi peni year ben patient state —
top_n(20, topic1) |>
arrange(desc(topic1)) |>
select(file, line, topic1)
View(topic1)
#Topic 4 -’ “ — word trump ” length  peopl thing book
theta3 <- as.data.frame(theta)
topic4 <- theta3 %>%
rownames_to_column(var = "file") |> # putting the rownames into a new column called file
mutate(file = str_remove(file, "^X"),  # Remove leading 'X'
line = str_extract(file, "(?<=\\.txt)\\.\\d+")) |>   # Extract number after .txt
mutate(file = str_remove(file, "\\.\\d+$")) |>
rename(topic4 = '4') |> # looking at first topic: ’ “ — word trump ” length  peopl thing book
top_n(20, topic4) |>
arrange(desc(topic4)) |>
select(file, line, topic4)
View(topic4)
#add categories
vizDataFrame <- vizDataFrame %>%
mutate(variable = str_to_lower(variable)) %>%
mutate(category = case_when(
str_detect(variable, "usa|surgeri|tick|bodi|peni|patient|state") ~ "health",
str_detect(variable, "mother|adopt|children|parent|famili|child") ~ "family",
str_detect(variable, "time|york|compani|copyright|english|photo") ~ "meta_data",
str_detect(variable, "word|trump|book|peopl|thing") ~ "politics",
str_detect(variable, "abort|women|contracept|pregnanc|birth|law") ~ "law",
str_detect(variable, "state|govern|texa|plan|document") ~ "reporductive_method"
))
#add categories
vizDataFrame <- vizDataFrame %>%
mutate(variable = str_to_lower(variable)) %>%
mutate(category = case_when(
str_detect(variable, "usa|surgeri|tick|bodi|peni|patient|state") ~ "health",
str_detect(variable, "mother|adopt|children|parent|famili|child") ~ "family",
str_detect(variable, "time|york|compani|copyright|english|photo") ~ "meta_data",
str_detect(variable, "word|trump|book|peopl|thing") ~ "politics",
str_detect(variable, "abort|women|contracept|pregnanc|birth|law") ~ "law",
str_detect(variable, "state|govern|texa|plan|document") ~ "reproductive_method"
))
#add categories
vizDataFrame <- vizDataFrame %>%
mutate(variable = str_to_lower(variable)) %>%
mutate(category = case_when(
str_detect(variable, "usa|surgeri|tick|bodi|peni|patient|state") ~ "health",
str_detect(variable, "mother|adopt|children|parent|famili|child") ~ "family",
str_detect(variable, "time|york|compani|copyright|english|photo") ~ "meta_data",
str_detect(variable, "word|trump|book|peopl|thing") ~ "politics",
str_detect(variable, "abort|women|contracept|pregnanc|birth|law") ~ "law",
str_detect(variable, "state|govern|texa|plan|document") ~ "reproductive_equality"
))
theta2 <- as.data.frame(theta)
health <- theta2 %>%
#renaming for a general topic
rename(health = '1') %>%
top_n(20, health) %>%
arrange(desc(health )) %>%
select(health )
# Apply rownames_to_column
health <- tibble::rownames_to_column(health , "story_id")
health $story_id <- gsub("X", "", health $story_id)
head(health$story_id, 20)
#Checks out
theta2 <- as.data.frame(theta)
family <- theta2 %>%
#renaming for a general topic
rename(family = '2') %>%
top_n(20, family ) %>%
arrange(desc(family )) %>%
select(family )
# Apply rownames_to_column
family  <- tibble::rownames_to_column(family, "story_id")
family$story_id <- gsub("X", "", family$story_id)
head(family$story_id, 20)
#Checks out
theta2 <- as.data.frame(theta)
law <- theta2 %>%
#renaming for a general topic
rename(law = '5') %>%
top_n(20, law ) %>%
arrange(desc(law)) %>%
select(law )
# Apply rownames_to_column
law  <- tibble::rownames_to_column(law , "story_id")
law $story_id <- gsub("X", "", law$story_id)
head(law$story_id, 20)
#Checks out
#main theme is negros are lynching victims
# plot topic proportions per decade as bar plot
ggplot(vizDataFrame, aes(x=year, y=value, fill=category)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(20), "FF"), name = "year") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_manual(values=c("red",
"yellow",
"darkblue",
"blue",
"pink",
"orange")) +
labs(title = "Common Narratives in Vasectomy News Coverage 2022-2025",
subtitle = "Six probable topics in U.S. news sample. n=137",
caption = "Aggregate mean topic proportions per year. Graphic by Catherine Zhang, 04-04-2025")
#ggsave(here::here("./Figure_US_topics_04_04_2025.png"),device = "png",width=9,height=6, dpi=800)
View(vas)
#Topic 4 -’ “ — word trump ” length  peopl thing book
topic4 <- theta2 %>%
rownames_to_column(var = "file") |> # putting the rownames into a new column called file
mutate(file = str_remove(file, "^X"),  # Remove leading 'X'
line = str_extract(file, "(?<=\\.txt)\\.\\d+")) |>   # Extract number after .txt
mutate(file = str_remove(file, "\\.\\d+$")) |>
rename(topic4 = '4') |> # looking at first topic: ’ “ — word trump ” length  peopl thing book
top_n(20, topic4) |>
arrange(desc(topic4)) |>
select(file, line, topic4)
topic2 <- theta2 %>%
rownames_to_column(var = "file") |> # putting the rownames into a new column called file
mutate(file = str_remove(file, "^X"),  # Remove leading 'X'
line = str_extract(file, "(?<=\\.txt)\\.\\d+")) |>   # Extract number after .txt
mutate(file = str_remove(file, "\\.\\d+$")) |>
rename(topic2 = '2') |> # looking at first topic: ’ “ — word trump ” length  peopl thing book
top_n(20, topic2) |>
arrange(desc(topic2)) |>
select(file, line, topic2)
topic3 <- theta2 %>%
rownames_to_column(var = "file") |> # putting the rownames into a new column called file
mutate(file = str_remove(file, "^X"),  # Remove leading 'X'
line = str_extract(file, "(?<=\\.txt)\\.\\d+")) |>   # Extract number after .txt
mutate(file = str_remove(file, "\\.\\d+$")) |>
rename(topic3 = '3') |>
top_n(20, topic3) |>
arrange(desc(topic3)) |>
select(file, line, topic3)
topic6 <- theta2 %>%
rownames_to_column(var = "file") |> # putting the rownames into a new column called file
mutate(file = str_remove(file, "^X"),  # Remove leading 'X'
line = str_extract(file, "(?<=\\.txt)\\.\\d+")) |>   # Extract number after .txt
mutate(file = str_remove(file, "\\.\\d+$")) |>
rename(topic6 = '6') |>
top_n(20, topic6) |>
arrange(desc(topic6)) |>
select(file, line, topic6)
topic5 <- theta2 %>%
rownames_to_column(var = "file") |> # putting the rownames into a new column called file
mutate(file = str_remove(file, "^X"),  # Remove leading 'X'
line = str_extract(file, "(?<=\\.txt)\\.\\d+")) |>   # Extract number after .txt
mutate(file = str_remove(file, "\\.\\d+$")) |>
rename(topic5 = '5') |>
top_n(20, topic5) |>
arrange(desc(topic5)) |>
select(file, line, topic5)
View(topic1)
View(vas)
