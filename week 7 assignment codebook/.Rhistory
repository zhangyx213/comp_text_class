library(readr)
article_df <- read_csv("article_df.csv")
View(article_df)
#example of u.s. articles
library(dplyr)
library(stringr)
library(readr)
article_df <- read_csv("article_df.csv")
View(article_df)
View(article_df)
# Step 1: Count keyword frequencies for each sentence in the article_df.
article_df <- article_df %>%
mutate(
freq_medical = str_count(sentence, regex("procedure|safe|medical|health|recovery", ignore_case = TRUE)),
freq_decision = str_count(sentence, regex("decision|choice|family planning|responsibility|gender equality|contraceptive", ignore_case = TRUE)),
freq_policy   = str_count(sentence, regex("roe v\\. wade|supreme court|birth rate|population policy|abortion|political|policy", ignore_case = TRUE))
)
# Step 2: Aggregate counts for each article using filename.
article_summary <- article_df %>%
group_by(filename) %>%
summarise(
total_medical = sum(freq_medical, na.rm = TRUE),
total_decision = sum(freq_decision, na.rm = TRUE),
total_policy   = sum(freq_policy, na.rm = TRUE)
)
# Step 3: Classify each article based on which keyword frequency is highest.
article_summary <- article_summary %>%
mutate(
issue_type = case_when(
total_medical >= total_decision & total_medical >= total_policy & total_medical > 0 ~ "Medical Issues",
total_decision >= total_medical & total_decision >= total_policy & total_decision > 0 ~ "Contraceptive Decision-Making",
total_policy >= total_medical & total_policy >= total_decision & total_policy > 0 ~ "Political/Policy Context",
TRUE ~ "Other"
)
)
# Check the results
head(article_summary)
library(tidytext)
# Tokenize the sentences into words
article_tokens <- article_df %>%
unnest_tokens(word, sentence)
# Join tokens with the AFINN lexicon and compute sentiment scores for each word
afinn <- get_sentiments("afinn")
article_sentiment <- article_tokens %>%
inner_join(afinn, by = "word") %>%
# Aggregate sentiment scores by article
group_by(filename) %>%
summarise(sentiment_score = sum(value, na.rm = TRUE)) %>%
ungroup() %>%
# Classify the overall article sentiment
mutate(sentiment_category = case_when(
sentiment_score > 0 ~ "Positive",
sentiment_score < 0 ~ "Negative",
TRUE ~ "Neutral"
))
# Optional: View the resulting aggregated data frame
head(article_sentiment)
article_policy_mentions <- article_df %>%
mutate(roe_mentions = str_count(sentence, regex("roe v\\. wade", ignore_case = TRUE))) %>%
group_by(filename) %>%
summarise(total_roe_mentions = sum(roe_mentions, na.rm = TRUE)) %>%
ungroup() %>%
mutate(policy_classification = case_when(
total_roe_mentions > 0 ~ "Roe Mentioned",
TRUE ~ "Not Mentioned"
))
head(article_policy_mentions)
