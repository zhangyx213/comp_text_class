install.packages("tidyverse")
#install.packages("rio")
#install.packages("janitor")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("rio")
install.packages("janitor")
library(tidyverse)
#load the library for rio
#load the library for janitor
library(tidyverse)
library(rio)
library(janitor)
MediaBucks <- rio::import("https://docs.google.com/spreadsheets/d/1y2w31HHwE31N9pJoIB1W8oWgW7citB4hzjo99XfwVqo/edit#gid=357643135", sheet = "RealMediaSalaries2")
View(MediaBucks)
#head provides a peak at the first six rows of data
head(MediaBucks)
nrow(MediaBucks)
#use the command ncol to determine the number of columns
ncol(MediaBucks)
glimpse(MediaBucks)
names(MediaBucks)
head(MediaBucks)
#Displays the first six rows of data
summary(MediaBucks$Salary)
sum(MediaBucks$Salary, na.rm=TRUE)
#We just used sum to determine total salaries.
#mean is the command to determine averages.
#replace sum for mean:
mean(MediaBucks$Salary, na.rm=TRUE)
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
MediaBucks %>%
count(Gender) %>%
arrange(desc(n))
#Using the example code above, create a column called Avg_Salary and use the mean command to produce the calculation
#Adapt the code below to do this:
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Avg_Salary = mean(Salary, na.rm=TRUE))
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
WSJ <- subset(MediaBucks, COMPANY=="WallStreetJournal")
summary(WSJ$Salary)
```
View(MediaSalary)
```
```
q()
#head provides a peak at the first six rows of data
head(MediaBucks)
nrow(MediaBucks)
ncol(MediaBucks)
glimpse(MediaBucks)
glimpse(MediaBucks)
names(MediaBucks)
head(MediaBucks)
summary(MediaBucks$Salary)
sum(MediaBucks$Salary, na.rm=TRUE)
sum(MediaBucks$Salary, na.rm=TRUE)
#We just used sum to determine total salaries.
#mean is the command to determine averages.
#replace sum for mean:
mean(MediaBucks$Salary, na.rm=TRUE)
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
install.packages("tidyverse")
install.packages("rio")
install.packages("janitor")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("rio")
install.packages("janitor")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("rio")
install.packages("janitor")
install.packages("tidyverse")
glimpse(MediaBucks)
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
MediaBucks %>%
count(Gender) %>%
arrange(desc(n))
MediaBucks
select(Gender, Salary)
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
library(tidyverse)
library(rio)
library(janitor)
MediaBucks <- rio::import("https://docs.google.com/spreadsheets/d/1y2w31HHwE31N9pJoIB1W8oWgW7citB4hzjo99XfwVqo/edit#gid=357643135", sheet = "RealMediaSalaries2") #%>%
#clean_names()
#head provides a peak at the first six rows of data
head(MediaBucks)
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
MediaBucks %>%
count(Gender) %>%
arrange(desc(n))
#Using the example code above, create a column called Avg_Salary and use the mean command to produce the calculation
#Adapt the code below to do this:
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Avg_Salary = mean(Salary, na.rm=TRUE))
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
range(MediaSalary$Salary)
nrow(MediaSalary$Salary)
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
```
range(MediaSalary$Salary)
nrow(MediaSalary)
nrow(MediaSalary %>%
filter(Salary >= 1000))
nrow(MediaSalary %>%
filter(Salary >= 500))
nrow(MediaBucks %>%
filter(Salary >= 500))
WSJ <- subset(MediaBucks, COMPANY=="WallStreetJournal")
summary(WSJ$Salary)
Journal <- subset(MediaBucks, grepl("?Journal", COMPANY))
Bloom <- subset(MediaBucks, grepl("?Bloomberg", COMPANY))
View(MediaBucks)
NYT <- subset(MediaBucks, COMPANY=="NewYorkTimes")
View(NYT)
summary(NYT$Salary)
NYT_sorted <- df[order(NYT$Salary, decreasing = TRUE), ]
class(NYT)
NYT_sorted <- NYT[order(NYT$Salary, decreasing = TRUE), ]
head(NYT_sorted)
head(NYT_sorted,1)
summary(NYT$Salary)
View(Bloom)
Bus <- subset(MediaBucks, grepl("?Business", COMPANY))
summary(Bloom)
summary(Bus)
summary(Bloom$Salary)
summary(Bus$Salary)
BigBoys <- filter(MediaSalary, COMPANY %in% c("NewYorkTimes", "WallStreetJournal", "Bloomberg"))
Reporters <- subset(MediaBucks, grepl("?reporter", TITLE))
summary(Reporters$Salary)
Reporters_sorted <- Reporters[order(Reporters$Salary, decreasing = TRUE), ]
head(Reporters_sorted,1)
Editors <- subset(MediaBucks, grepl("?editor", TITLE))
summary(Editors)
summary(Editors$Salary)
Editors_sorted <- Editors[order(Editors$Salary, decreasing = TRUE), ]
head(Editors_sorted,1)
WSJ_Black <- MediaBucks %>% filter(Race =="black", COMPANY == "WallStreetJournal")
MediaBucks %>%
select(Race, Salary) %>%
group_by(Race) %>%
summarize(Avg_Salary = mean(Salary, na.rm=TRUE)) %>%
arrange(desc(Avg_Salary)
MediaBucks %>%
MediaBucks %>%
select(Race, Salary) %>%
group_by(Race) %>%
summarize(Avg_Salary = mean(Salary, na.rm=TRUE)) %>%
arrange(desc(Avg_Salary))
MediaBucks %>%
count(Race) %>%
arrange(desc(n))
MediaBucks %>%
select(Race, Salary) %>%
group_by(Race) %>%
summarize(Total=n(),
Avg = mean(Salary, na.rm=TRUE)) %>%
arrange(desc(Total))
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
library(tidyverse)
library(rio)
library(janitor)
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
range(MediaSalary$Salary)
nrow(MediaBucks %>%
filter(Salary >= 500))
#3: Identify title, gender and race of the highest paid position at NYT
NYT_sorted <- NYT[order(NYT$Salary, decreasing = TRUE), ]
head(NYT_sorted,1)
#4: Build a table that filters "Business" in the Company column. Determine Summary of the Salary column.
#Build a second table that filters "Bloomberg" in the Company column.  Determine Summary of the Salary column.
Bloom <- subset(MediaBucks, grepl("?Bloomberg", COMPANY))
Bus <- subset(MediaBucks, grepl("?Business", COMPANY))
summary(Bloom$Salary)
summary(Bus$Salary)
#Which one is higher?
Bloom
