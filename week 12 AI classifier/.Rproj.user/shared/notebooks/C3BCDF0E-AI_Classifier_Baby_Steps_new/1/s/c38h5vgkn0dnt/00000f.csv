"0","process_llm_response_to_df <- function(response) {"
"0","  # Extract lines"
"0","  lines <- strsplit(response, ""\n"")[[1]]"
"0","  "
"0","  # Remove markdown code block markers if present"
"0","  lines <- lines[!grepl(""^```"", lines)]"
"0","  "
"0","  # Initialize vectors for data"
"0","  filenames <- c()"
"0","  categories <- c()"
"0","  "
"0","  # Flag to track if we're processing data (after header)"
"0","  header_found <- FALSE"
"0","  "
"0","  for (line in lines) {"
"0","    # Skip empty lines"
"0","    if (trimws(line) == """") next"
"0","    "
"0","    # Skip row numbers or other artifacts (lines with asterisks)"
"0","    if (grepl(""\\*\\*"", line)) next"
"0","    "
"0","    # Check if this is the header line"
"0","    if (grepl(""filename,category"", line, ignore.case = TRUE)) {"
"0","      header_found <- TRUE"
"0","      next"
"0","    }"
"0","    "
"0","    # Process data lines (only after header is found)"
"0","    if (header_found) {"
"0","      parts <- strsplit(line, "","")[[1]]"
"0","      if (length(parts) >= 2) {"
"0","        filenames <- c(filenames, parts[1])"
"0","        categories <- c(categories, paste(parts[2:length(parts)], collapse="",""))"
"0","      }"
"0","    }"
"0","  }"
"0","  "
"0","  # Create and return the dataframe"
"0","  if (length(filenames) > 0) {"
"0","    data.frame("
"0","      filename = filenames,"
"0","      category = categories,"
"0","      stringsAsFactors = FALSE"
"0","    )"
"0","  } else {"
"0","    # Return empty dataframe with correct structure if no data found"
"0","    data.frame("
"0","      filename = character(0),"
"0","      category = character(0),"
"0","      stringsAsFactors = FALSE"
"0","    )"
"0","  }"
"0","}"
"0",""
"0","result_df <- process_llm_response_to_df(response)"
"0",""
"0","result_df"
