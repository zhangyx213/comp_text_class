library(tidyverse)
#Set working directory to .../CompText_Jour/exercises
baltcity_income <- read.csv("assets/data/baltcity_income_clean.csv") %>%
as.data.frame()
glimpse(baltcity_income)
head(baltcity_income)
baltcity_income %>%
group_by(Neighborhood) %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
group_by(Neighborhood) %>%
summarize(
count_tracts = n()
) %>%
arrange(desc(count_tracts))
baltcity_income %>%
summarise(
count_tracts = n()
)
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE)
)
summary(baltcity_income$x2020)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter(x2020 ==13559)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter(x2020 >=100000)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 ==13559) | (x2020==199531))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 >=35702) | (x2020<=56311))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 >=35702) and (x2020 <=56311))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 >=35702) & (x2020 <=56311))
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter((x2020 >100000)
baltcity_income %>%
select(Neighborhood, x2020) %>%
filter(x2020 >100000)
View(baltcity_income)
View(baltcity_income)
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_avg = mean(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
summarise(
count_tracts = n(),
min_2020 = min(x2020, na.rm=TRUE),
max_2020 = max(x2020, na.rm=TRUE))
baltcity_income %>%
select(Neighborhood, x2010, x2016, x2020, Census) %>%
summarise(
count_tracts = n(),
x2020_median = median(x2020, na.rm=TRUE),
x2020_avg = mean(x2020, na.rm=TRUE),
x2016_median = median(x2016, na.rm=TRUE),
x2016_avg = mean(x2016, na.rm=TRUE),
x2010_median = median(x2010, na.rm=TRUE),
x2010_avg = mean(x2010, na.rm=TRUE))
#loading 2020 and 2010 Baltimore City population by race
baltcity_race <- read_csv("assets/data/baltcity_race_8_13.csv") %>%
as.data.frame()
baltcity_race %>%
select(x2020_white, x2020_black) %>%
summarize(
white_total = sum(x2020_white, na.rm = TRUE),
black_total = sum(x2020_black, na.rm = TRUE)
)
View(baltcity_race)
View(baltcity_race)
baltcity_race %>%
select(x2020_asian, x2020_hispanic, x2020_pac_islander) %>%
summarize(
asian_total = sum(x2020_asian, na.rm = TRUE),
hispanic_total = sum(x2020_hispanic, na.rm = TRUE)
pac_islander_total = sum(x2020_pac_islander, na.rm = TRUE)
baltcity_race %>%
select(x2020_asian, x2020_hispanic, x2020_pac_islander) %>%
summarize(
asian_total = sum(x2020_asian, na.rm = TRUE),
hispanic_total = sum(x2020_hispanic, na.rm = TRUE)
pac_islander_total = sum(x2020_pac_islander, na.rm = TRUE)
baltcity_race %>%
select(x2020_asian, x2020_hispanic, x2020_pac_islander) %>%
summarize(
asian_total = sum(x2020_asian, na.rm = TRUE),
hispanic_total = sum(x2020_hispanic, na.rm = TRUE),
pac_islander_total = sum(x2020_pac_islander, na.rm = TRUE)
)
race1 <- baltcity_race %>%
select(census_tract, x2020_white, x2020_black) %>%
mutate(ratio_w_b = (x2020_black/x2020_white)) %>%
arrange(desc(ratio_w_b))
head(race1)
average_2020 = 56311.21
baltcity_income %>%
select(Census, x2020) %>%
filter(x2020 < average_2020)
average_2020 = 56311.21
low_income = baltcity_income %>%
select(Census, x2020) %>%
filter(x2020 < average_2020)
average_2020 = 56311.21
low_income = baltcity_income %>%
select(Census, x2020) %>%
filter(x2020 < average_2020)
low_income
nrow(low_income)
average_2020 = 56311.21
low_income = baltcity_income %>%
select(Census, x2020) %>%
filter(x2020 < average_2020)
low_income
nrow(low_income)
nrow(baltcity_income)
answer = nrow(low_income) / nrow(baltcity_income)
answer
```
print(paste("The percentage of the city's census tracts below the average of $", average_2020, "is:", answer*100, "%"))
answer = nrow(low_income) / nrow(baltcity_income)
answer
print(paste0("The percentage of the city's census tracts below the average of $", average_2020, "is:", answer*100, "%"))
answer = nrow(low_income) / nrow(baltcity_income)
answer
print(paste0("The percentage of the city's census tracts below the average of $", average_2020, "//is:", answer*100, "%"))
answer = nrow(low_income) / nrow(baltcity_income)
answer
print(paste0("The percentage of the city's census tracts below the average of $", average_2020, "is:", answer*100, "%"))
