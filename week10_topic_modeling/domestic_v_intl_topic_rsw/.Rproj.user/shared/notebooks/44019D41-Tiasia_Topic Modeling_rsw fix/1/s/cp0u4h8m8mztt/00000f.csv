"0","# Step 1: Check dimensions"
"0","n_theta <- nrow(theta)"
"0","n_textdata <- length(textdata$day)"
"0",""
"0","cat(""Number of rows in theta: "", n_theta, ""\n"")"
"1","Number of rows in theta: "
"1"," "
"1","60641"
"1"," "
"1","
"
"0","cat(""Number of documents in textdata: "", n_textdata, ""\n"")"
"1","Number of documents in textdata: "
"1"," "
"1","60641"
"1"," "
"1","
"
"0","# Check if textdata contains all the documents in theta"
"0","common_ids <- intersect(rownames(theta), textdata$doc_id) # Assuming textdata has a 'doc_id' column"
"0",""
"0","# Filter textdata to include only the documents present in theta"
"0","textdata_filtered <- textdata[textdata$doc_id %in% common_ids, ]"
"0",""
"0","# Check dimensions after filtering"
"0","n_textdata_filtered <- nrow(textdata_filtered)"
"0","cat(""Number of documents in filtered textdata: "", n_textdata_filtered, ""\n"")"
"1","Number of documents in filtered textdata: "
"1"," "
"1","60641"
"1"," "
"1","
"
"0","# Ensure the lengths match now"
"0","if (n_theta != n_textdata_filtered) {"
"0","  stop(""The number of rows in 'theta' still does not match the length of 'textdata_filtered$decade'."")"
"0","}"
"0",""
"0","# Align rownames of theta with filtered textdata"
"0","theta_aligned <- theta[rownames(theta) %in% textdata_filtered$doc_id, ]"
"0",""
"0","# Optional: Verify the order of documents"
"0","if (!all(rownames(theta_aligned) == textdata_filtered$doc_id)) {"
"0","  # If the order doesn't match, reorder one to match the other"
"0","  textdata_filtered <- textdata_filtered[match(rownames(theta_aligned), textdata_filtered$doc_id), ]"
"0","}"
"0",""
"0","# Ensure they are now aligned and can be combined"
"0","if (!all(rownames(theta_aligned) == textdata_filtered$doc_id)) {"
"0","  stop(""The document IDs still do not match. Please check the data alignment."")"
"0","}"
"0",""
"0","# Step 2: Combine data"
"0","topic_data <- data.frame(theta_aligned, day = textdata_filtered$day)"
"0",""
"0","# Step 3: Aggregate data"
"0","topic_proportion_per_day <- aggregate(. ~ day, data = topic_data, FUN = mean)"
"0",""
"0",""
"0","# get mean topic proportions per decade"
"0","# topic_proportion_per_decade <- aggregate(theta, by = list(decade = textdata$decade), mean)"
"0","# set topic names to aggregated columns"
"0","colnames(topic_proportion_per_day)[2:(K+1)] <- topicNames"
"0","# reshape data frame"
"0","vizDataFrame <- melt(topic_proportion_per_day, id.vars = ""day"")"
"0",""
"0","# #filter out 1960 - one article"
"0","vizDataFrame <- vizDataFrame  "
"0","   #filter(!decade==1960)"
